---
- name: Install ClickHouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    # Добавляем GPG-ключ (как в документации)
    - name: Add ClickHouse GPG key
      become: true
      ansible.builtin.shell: |
        curl -fsSL 'https://packages.clickhouse.com/rpm/lts/repodata/repomd.xml.key' | gpg --dearmor -o /usr/share/keyrings/clickhouse-keyring.gpg
      args:
        creates: "/usr/share/keyrings/clickhouse-keyring.gpg"
      changed_when: false

    # Устанавливаем зависимости
    - name: Install prerequisites
      become: true
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: true
      register: prereq_install
      failed_when: false

    # Добавляем репозиторий с динамическим определением архитектуры
    - name: Add ClickHouse repository
      become: true
      ansible.builtin.shell: |
        echo "deb [signed-by=/usr/share/keyrings/clickhouse-keyring.gpg arch=$(dpkg --print-architecture)] https://packages.clickhouse.com/deb stable main" > /etc/apt/sources.list.d/clickhouse.list
      args:
        creates: "/etc/apt/sources.list.d/clickhouse.list"
      changed_when: false

    # Обновляем apt
    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: true
      register: apt_update
      failed_when: false

    # Устанавливаем ClickHouse
    - name: Install ClickHouse packages
      become: true
      ansible.builtin.apt:
        name:
          - clickhouse-server
          - clickhouse-client
        state: present
        update_cache: false
      notify: Start clickhouse service

    # Создаём базу данных
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: clickhouse
  become: true
  tasks:
    # 1. Установка зависимостей
    - name: Install prerequisites
      become: true
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: true
      register: vector_prereq
      failed_when: false

    # 2. Добавление репозитория Vector (официальный метод)
    - name: Add Vector repository
      become: true
      ansible.builtin.shell: |
        bash -c "$(curl -fsSL https://setup.vector.dev)"
      args:
        creates: "/etc/apt/sources.list.d/vector.list"
      changed_when: false

    # 3. Обновление apt-кеша
    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: true
      register: vector_apt_update
      failed_when: false

    # 4. Установка Vector
    - name: Install Vector
      become: true
      ansible.builtin.apt:
        name: vector
        state: present
        update_cache: false

    # 5. Настройка конфигурации
    - name: Create Vector config directory
      ansible.builtin.file:
        path: "/etc/vector"
        state: directory
        mode: "0755"

    - name: Deploy Vector config
      ansible.builtin.template:
        src: "templates/vector.yaml.j2"
        dest: "/etc/vector/vector.yml"
        mode: "0644"

    # 6. Запуск сервиса
    - name: Enable and start Vector
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        enabled: true
        daemon_reload: true
