---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
- name: Install and configure Vector
  hosts: vector
  vars:
    vector_version: "0.34.0"
    vector_install_dir: "/opt/vector"
    vector_config_dir: "/etc/vector"
  
  handlers:
    - name: Restart Vector
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted

  tasks:
    - name: Create installation directory
      ansible.builtin.file:
        path: "{{ vector_install_dir }}"
        state: directory
        mode: '0755'

    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector-{{ vector_version }}.tar.gz"
        checksum: "sha256:9a5a6d0b9a9eb7a9f3f3a3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3"

    - name: Extract Vector
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_version }}.tar.gz"
        dest: "{{ vector_install_dir }}"
        remote_src: yes
        extra_opts: ["--strip-components=1"]

    - name: Create symlink to binary
      ansible.builtin.file:
        src: "{{ vector_install_dir }}/bin/vector"
        dest: "/usr/local/bin/vector"
        state: link
        force: yes

    - name: Create config directory
      ansible.builtin.file:
        path: "{{ vector_config_dir }}"
        state: directory
        mode: '0755'

    - name: Deploy Vector config
      ansible.builtin.template:
        src: templates/vector.yaml.j2
        dest: "{{ vector_config_dir }}/vector.yaml"
        mode: '0644'
      notify: Restart Vector

    - name: Create systemd service
      ansible.builtin.template:
        src: templates/vector.service.j2
        dest: /etc/systemd/system/vector.service
        mode: '0644'
      notify: Restart Vector

    - name: Ensure Vector is enabled and started
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        enabled: yes
        daemon_reload: yes