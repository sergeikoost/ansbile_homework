---
- name: Install Clickhouse
  hosts: remote_server
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install and configure Vector
  hosts: remote_server
  become: yes
  vars:
    vector_version: "0.34.0"
  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector.tar.gz"
        checksum: "sha256:3a39e712da43126262db878c3ae7647b23aac88834dea2763cc84269cb3c0206"

    - name: Create installation directory
      ansible.builtin.file:
        path: "/opt/vector-{{ vector_version }}"
        state: directory

    - name: Extract Vector
      ansible.builtin.unarchive:
        src: "/tmp/vector.tar.gz"
        dest: "/opt/vector-{{ vector_version }}"
        remote_src: yes
        extra_opts: ["--strip-components=1"]
        creates: "/opt/vector-{{ vector_version }}/bin/vector"

    - name: Create symlink to binary
      ansible.builtin.file:
        src: "/opt/vector-{{ vector_version }}/bin/vector"
        dest: "/usr/local/bin/vector"
        state: link
        force: yes  # Добавлено force для перезаписи существующей ссылки

    - name: Create Vector config directory
      ansible.builtin.file:
        path: "/etc/vector"
        state: directory
        mode: '0755'

    - name: Deploy Vector config
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/vector.yaml.j2"
        dest: "/etc/vector/vector.yml"
        mode: '0644'

    - name: Deploy systemd service
      ansible.builtin.template:
        src: "{{ playbook_dir }}/templates/vector.service.j2"
        dest: "/etc/systemd/system/vector.service"
        mode: '0644'

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Ensure Vector is enabled and started
      ansible.builtin.systemd:
        name: vector
        state: started
        enabled: yes