---
- name: Install ClickHouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: true
      ignore_errors: true

    - name: Install prerequisites
      become: true
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - gnupg
          - curl
        state: present
      ignore_errors: true


    - name: Add ClickHouse repository
      become: true
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/clickhouse-keyring.gpg] https://packages.clickhouse.com/deb stable main"
        state: present
        filename: "clickhouse.list"

    - name: Install ClickHouse packages
      become: true
      ansible.builtin.apt:
        name:
          - clickhouse-server
          - clickhouse-client
        state: present
      notify: Start clickhouse service

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: clickhouse
  become: true
  tasks:
    - name: Create vector user
      become: true
      ansible.builtin.user:
        name: vector
        system: true
        create_home: false

    - name: Create Vector directories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: vector
        group: vector
        mode: '0755'
      with_items:
        - /etc/vector
        - /var/lib/vector

    - name: Install prerequisites
      become: true
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: true
      register: vector_prereq
      failed_when: false

    - name: Add Vector repository
      become: true
      ansible.builtin.shell: |
        bash -c "$(curl -fsSL https://setup.vector.dev)"
      args:
        creates: "/etc/apt/sources.list.d/vector.list"
      changed_when: false

    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: true
      register: vector_apt_update
      failed_when: false
      ignore_errors: true

    - name: Install Vector
      become: true
      ansible.builtin.apt:
        name: vector
        state: present
        update_cache: false

    - name: Deploy Vector config
      become: true
      ansible.builtin.template:
        src: "templates/vector.yaml.j2"
        dest: "/etc/vector/vector.yaml"
        owner: vector
        group: vector
        mode: "0640"

    - name: Install Vector service file
      become: true
      ansible.builtin.template:
        src: "templates/vector.service.j2"
        dest: "/etc/systemd/system/vector.service"
        mode: "0644"

    - name: Reload systemd
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable and start Vector
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        enabled: true
- name: Install Lighthouse
  hosts: lighthouse
  become: true
  tasks:
    - name: Install Nginx and dependencies
      ansible.builtin.apt:
        name:
          - nginx
          - unzip
        state: present
        update_cache: true

    - name: Download Lighthouse static
      ansible.builtin.get_url:
        url: "https://github.com/VKCOM/lighthouse/archive/refs/heads/gh-pages.zip"
        dest: "/tmp/lighthouse.zip"
        mode: "0755"

    - name: Create web directory
      ansible.builtin.file:
        path: /var/www/lighthouse
        state: directory
        mode: "0755"

    - name: Unarchive Lighthouse
      ansible.builtin.unarchive:
        src: "/tmp/lighthouse.zip"
        dest: "/var/www/lighthouse"
        remote_src: true
        extra_opts: ["--strip-components=1"]

    - name: Configure Nginx
      ansible.builtin.template:
        src: "templates/nginx-lh.conf.j2"
        dest: "/etc/nginx/sites-available/lighthouse.conf"
        mode: "0644"
      notify: Restart Nginx

    - name: Enable Nginx site
      ansible.builtin.file:
        src: "/etc/nginx/sites-available/lighthouse.conf"
        dest: "/etc/nginx/sites-enabled/lighthouse.conf"
        state: link
      notify: Restart Nginx

    - name: Disable default site
      ansible.builtin.file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Restart Nginx

  handlers:
    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
